name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-go:
    name: Build Go Binaries
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Build MCP Server binaries
        run: |
          cd mcp-server

          # Windows
          GOOS=windows GOARCH=amd64 go build \
            -ldflags="-s -w" \
            -o ../distribution/binaries/windows-amd64/agent-payment-server.exe \
            ./cmd/agent-payment-server

          # macOS Intel
          GOOS=darwin GOARCH=amd64 go build \
            -ldflags="-s -w" \
            -o ../distribution/binaries/darwin-amd64/agent-payment-server \
            ./cmd/agent-payment-server

          # macOS Apple Silicon
          GOOS=darwin GOARCH=arm64 go build \
            -ldflags="-s -w" \
            -o ../distribution/binaries/darwin-arm64/agent-payment-server \
            ./cmd/agent-payment-server

          # Linux
          GOOS=linux GOARCH=amd64 go build \
            -ldflags="-s -w" \
            -o ../distribution/binaries/linux-amd64/agent-payment-server \
            ./cmd/agent-payment-server

      - name: Build Installer binaries
        run: |
          cd installer

          # Embed MCP server binaries
          mkdir -p internal/installer/binaries
          cp ../distribution/binaries/windows-amd64/agent-payment-server.exe internal/installer/binaries/windows-amd64.exe
          cp ../distribution/binaries/darwin-amd64/agent-payment-server internal/installer/binaries/darwin-amd64
          cp ../distribution/binaries/darwin-arm64/agent-payment-server internal/installer/binaries/darwin-arm64
          cp ../distribution/binaries/linux-amd64/agent-payment-server internal/installer/binaries/linux-amd64

          # Build installer for each platform
          # Windows
          GOOS=windows GOARCH=amd64 go build \
            -ldflags="-s -w" \
            -o ../distribution/installers/agent-payment-installer-windows-amd64.exe \
            ./cmd/installer

          # macOS Intel
          GOOS=darwin GOARCH=amd64 go build \
            -ldflags="-s -w" \
            -o ../distribution/installers/agent-payment-installer-macos-intel \
            ./cmd/installer

          # macOS Apple Silicon
          GOOS=darwin GOARCH=arm64 go build \
            -ldflags="-s -w" \
            -o ../distribution/installers/agent-payment-installer-macos-arm64 \
            ./cmd/installer

          # Linux
          GOOS=linux GOARCH=amd64 go build \
            -ldflags="-s -w" \
            -o ../distribution/installers/agent-payment-installer-linux-amd64 \
            ./cmd/installer

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: go-binaries
          path: distribution/

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build-go
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            go-binaries/installers/*
            go-binaries/binaries/**/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
